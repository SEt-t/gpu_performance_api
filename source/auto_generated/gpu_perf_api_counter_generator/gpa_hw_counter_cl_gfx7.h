//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief CL counter definitions for GFX7.
//==============================================================================

// This file is NOT autogenerated by the ConvertHWEnums project.

#ifndef GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX7_H_
#define GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX7_H_

// clang-format off

#include <set>

struct GpaHardwareCounterDesc;
struct GpaCounterGroupDesc;
struct GpaSqCounterGroupDesc;

namespace counter_cl_gfx7
{
    extern std::vector<std::vector<GpaHardwareCounterDesc>*> kClCounterGroupArrayGfx7;           ///< Array of hardware counter groups for Cl for Gfx7 family
    extern std::vector<GpaCounterGroupDesc>                  kHwClGroupsGfx7;                    ///< Array of counter groups for Cl for Gfx7 family
    extern GpaCounterGroupExposedCounterDesc                 kHwClExposedCountersByGroupGfx7[];  ///< Array of exposed counter groups for Cl for Gfx7 family
    extern GpaPaddedCounterDesc                              kClPaddedCounterByGroupGfx7[];      ///< Array of reserved counter for Cl for Gfx7 family
    extern GpaSqCounterGroupDesc                             kHwClSqGroupsGfx7[];                ///< Array of SQ groups for Cl for Gfx7 family
    extern unsigned int                                      kHwClSqIsolatedGroupsGfx7[];        ///< Array of counter groups isolated from SQ counter groups for Cl for Gfx7 family
    extern const std::set<unsigned int>                      kHwClTimestampBlockIdsGfx7;         ///< Timestamp block id's for Cl for Gfx7 family
    extern const std::set<unsigned int>                      kHwClTimeCounterIndicesGfx7;        ///< Timestamp counter indices for Cl for Gfx7 family
    extern const unsigned int                                kHwClGroupCountGfx7;                ///< Hardware Group Count for Cl for Gfx7 family
    extern const unsigned int                                kClPaddedCounterGroupCountGfx7;     ///< reserved counter group count for Cl for Gfx7 family
    extern const unsigned int                                kHwClSqGroupCountGfx7;              ///< Hardware SQ Group Count for Cl for Gfx7 family
    extern const unsigned int                                kHwClSqIsolatedGroupCountGfx7;      ///< Hardware Isolated Group Count for Cl for Gfx7 family

    /// @brief If the requested ASIC type is supported, then the global GPU generation block instance counters are updated.
    ///
    /// @param [in] asic_type The ASIC type that is currently in use.
    ///
    /// @return True if the ASIC is matched by this file and block instances are updated, otherwise false.
    inline bool OverrideMaxBlockEvents(GDT_HW_ASIC_TYPE asic_type)
    {
        UNREFERENCED_PARAMETER(asic_type);

        return true;
    }
}  //  namespace counter_cl_gfx7

// clang-format on

#endif  // GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX7_H_
