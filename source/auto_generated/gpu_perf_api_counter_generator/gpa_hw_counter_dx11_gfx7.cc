//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief DX11 counter definitions for GFX7.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx7.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_dx11_gfx7.h"

// This file is NOT autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_dx11_gfx7
{
    using namespace counter_gfx7;

    std::vector<std::vector<GpaHardwareCounterDesc>*> kDx11CounterGroupArrayGfx7 = {
        &CB0countersGfx7,
        &CB1countersGfx7,
        &CB2countersGfx7,
        &CB3countersGfx7,
        &CB4countersGfx7,
        &CB5countersGfx7,
        &CB6countersGfx7,
        &CB7countersGfx7,
        &CB8countersGfx7,
        &CB9countersGfx7,
        &CB10countersGfx7,
        &CB11countersGfx7,
        &CB12countersGfx7,
        &CB13countersGfx7,
        &CB14countersGfx7,
        &CB15countersGfx7,
        &DB0countersGfx7,
        &DB1countersGfx7,
        &DB2countersGfx7,
        &DB3countersGfx7,
        &DB4countersGfx7,
        &DB5countersGfx7,
        &DB6countersGfx7,
        &DB7countersGfx7,
        &DB8countersGfx7,
        &DB9countersGfx7,
        &DB10countersGfx7,
        &DB11countersGfx7,
        &DB12countersGfx7,
        &DB13countersGfx7,
        &DB14countersGfx7,
        &DB15countersGfx7,
        &GRBMcountersGfx7,
        &PA_SU0countersGfx7,
        &PA_SU1countersGfx7,
        &PA_SU2countersGfx7,
        &PA_SU3countersGfx7,
        &PA_SC0countersGfx7,
        &PA_SC1countersGfx7,
        &PA_SC2countersGfx7,
        &PA_SC3countersGfx7,
        &SX0countersGfx7,
        &SX1countersGfx7,
        &SX2countersGfx7,
        &SX3countersGfx7,
        &SPI0countersGfx7,
        &SPI1countersGfx7,
        &SPI2countersGfx7,
        &SPI3countersGfx7,
        &SQ0countersGfx7,
        &SQ1countersGfx7,
        &SQ2countersGfx7,
        &SQ3countersGfx7,
        &SQ_ES0countersGfx7,
        &SQ_ES1countersGfx7,
        &SQ_ES2countersGfx7,
        &SQ_ES3countersGfx7,
        &SQ_GS0countersGfx7,
        &SQ_GS1countersGfx7,
        &SQ_GS2countersGfx7,
        &SQ_GS3countersGfx7,
        &SQ_VS0countersGfx7,
        &SQ_VS1countersGfx7,
        &SQ_VS2countersGfx7,
        &SQ_VS3countersGfx7,
        &SQ_PS0countersGfx7,
        &SQ_PS1countersGfx7,
        &SQ_PS2countersGfx7,
        &SQ_PS3countersGfx7,
        &SQ_LS0countersGfx7,
        &SQ_LS1countersGfx7,
        &SQ_LS2countersGfx7,
        &SQ_LS3countersGfx7,
        &SQ_HS0countersGfx7,
        &SQ_HS1countersGfx7,
        &SQ_HS2countersGfx7,
        &SQ_HS3countersGfx7,
        &SQ_CS0countersGfx7,
        &SQ_CS1countersGfx7,
        &SQ_CS2countersGfx7,
        &SQ_CS3countersGfx7,
        &TA0countersGfx7,
        &TA1countersGfx7,
        &TA2countersGfx7,
        &TA3countersGfx7,
        &TA4countersGfx7,
        &TA5countersGfx7,
        &TA6countersGfx7,
        &TA7countersGfx7,
        &TA8countersGfx7,
        &TA9countersGfx7,
        &TA10countersGfx7,
        &TA11countersGfx7,
        &TA12countersGfx7,
        &TA13countersGfx7,
        &TA14countersGfx7,
        &TA15countersGfx7,
        &TA16countersGfx7,
        &TA17countersGfx7,
        &TA18countersGfx7,
        &TA19countersGfx7,
        &TA20countersGfx7,
        &TA21countersGfx7,
        &TA22countersGfx7,
        &TA23countersGfx7,
        &TA24countersGfx7,
        &TA25countersGfx7,
        &TA26countersGfx7,
        &TA27countersGfx7,
        &TA28countersGfx7,
        &TA29countersGfx7,
        &TA30countersGfx7,
        &TA31countersGfx7,
        &TA32countersGfx7,
        &TA33countersGfx7,
        &TA34countersGfx7,
        &TA35countersGfx7,
        &TA36countersGfx7,
        &TA37countersGfx7,
        &TA38countersGfx7,
        &TA39countersGfx7,
        &TA40countersGfx7,
        &TA41countersGfx7,
        &TA42countersGfx7,
        &TA43countersGfx7,
        &TCP0countersGfx7,
        &TCP1countersGfx7,
        &TCP2countersGfx7,
        &TCP3countersGfx7,
        &TCP4countersGfx7,
        &TCP5countersGfx7,
        &TCP6countersGfx7,
        &TCP7countersGfx7,
        &TCP8countersGfx7,
        &TCP9countersGfx7,
        &TCP10countersGfx7,
        &TCP11countersGfx7,
        &TCP12countersGfx7,
        &TCP13countersGfx7,
        &TCP14countersGfx7,
        &TCP15countersGfx7,
        &TCP16countersGfx7,
        &TCP17countersGfx7,
        &TCP18countersGfx7,
        &TCP19countersGfx7,
        &TCP20countersGfx7,
        &TCP21countersGfx7,
        &TCP22countersGfx7,
        &TCP23countersGfx7,
        &TCP24countersGfx7,
        &TCP25countersGfx7,
        &TCP26countersGfx7,
        &TCP27countersGfx7,
        &TCP28countersGfx7,
        &TCP29countersGfx7,
        &TCP30countersGfx7,
        &TCP31countersGfx7,
        &TCP32countersGfx7,
        &TCP33countersGfx7,
        &TCP34countersGfx7,
        &TCP35countersGfx7,
        &TCP36countersGfx7,
        &TCP37countersGfx7,
        &TCP38countersGfx7,
        &TCP39countersGfx7,
        &TCP40countersGfx7,
        &TCP41countersGfx7,
        &TCP42countersGfx7,
        &TCP43countersGfx7,
        &TCC0countersGfx7,
        &TCC1countersGfx7,
        &TCC2countersGfx7,
        &TCC3countersGfx7,
        &TCC4countersGfx7,
        &TCC5countersGfx7,
        &TCC6countersGfx7,
        &TCC7countersGfx7,
        &TCC8countersGfx7,
        &TCC9countersGfx7,
        &TCC10countersGfx7,
        &TCC11countersGfx7,
        &TCC12countersGfx7,
        &TCC13countersGfx7,
        &TCC14countersGfx7,
        &TCC15countersGfx7,
        &VGT0countersGfx7,
        &VGT1countersGfx7,
        &VGT2countersGfx7,
        &VGT3countersGfx7,
        &GPUTimecountersGfx7,
    };

    std::vector<GpaCounterGroupDesc> kHwDx11GroupsGfx7 = {
        {0, "SDMA0", 0, 60, 2},
        {1, "SDMA1", 1, 60, 2},
        {2, "SRBM", 0, 19, 2},
        {3, "CPF", 0, 17, 2},
        {4, "CB0", 0, 226, 4},
        {5, "CB1", 1, 226, 4},
        {6, "CB2", 2, 226, 4},
        {7, "CB3", 3, 226, 4},
        {8, "CB4", 4, 226, 4},
        {9, "CB5", 5, 226, 4},
        {10, "CB6", 6, 226, 4},
        {11, "CB7", 7, 226, 4},
        {12, "CB8", 8, 226, 4},
        {13, "CB9", 9, 226, 4},
        {14, "CB10", 10, 226, 4},
        {15, "CB11", 11, 226, 4},
        {16, "CB12", 12, 226, 4},
        {17, "CB13", 13, 226, 4},
        {18, "CB14", 14, 226, 4},
        {19, "CB15", 15, 226, 4},
        {20, "DB0", 0, 257, 4},
        {21, "DB1", 1, 257, 4},
        {22, "DB2", 2, 257, 4},
        {23, "DB3", 3, 257, 4},
        {24, "DB4", 4, 257, 4},
        {25, "DB5", 5, 257, 4},
        {26, "DB6", 6, 257, 4},
        {27, "DB7", 7, 257, 4},
        {28, "DB8", 8, 257, 4},
        {29, "DB9", 9, 257, 4},
        {30, "DB10", 10, 257, 4},
        {31, "DB11", 11, 257, 4},
        {32, "DB12", 12, 257, 4},
        {33, "DB13", 13, 257, 4},
        {34, "DB14", 14, 257, 4},
        {35, "DB15", 15, 257, 4},
        {36, "GRBM", 0, 34, 2},
        {37, "GRBMSE0", 0, 15, 4},
        {38, "GRBMSE1", 1, 15, 4},
        {39, "GRBMSE2", 2, 15, 4},
        {40, "GRBMSE3", 3, 15, 4},
        {41, "RLC", 0, 7, 2},
        {42, "PA_SU0", 0, 153, 4},
        {43, "PA_SU1", 1, 153, 4},
        {44, "PA_SU2", 2, 153, 4},
        {45, "PA_SU3", 3, 153, 4},
        {46, "PA_SC0", 0, 395, 8},
        {47, "PA_SC1", 1, 395, 8},
        {48, "PA_SC2", 2, 395, 8},
        {49, "PA_SC3", 3, 395, 8},
        {50, "SX0", 0, 32, 4},
        {51, "SX1", 1, 32, 4},
        {52, "SX2", 2, 32, 4},
        {53, "SX3", 3, 32, 4},
        {54, "SPI0", 0, 186, 6},
        {55, "SPI1", 1, 186, 6},
        {56, "SPI2", 2, 186, 6},
        {57, "SPI3", 3, 186, 6},
        {58, "SQ0", 0, 252, 16},
        {59, "SQ1", 1, 252, 16},
        {60, "SQ2", 2, 252, 16},
        {61, "SQ3", 3, 252, 16},
        {62, "SQ_ES0", 0, 252, 16},
        {63, "SQ_ES1", 1, 252, 16},
        {64, "SQ_ES2", 2, 252, 16},
        {65, "SQ_ES3", 3, 252, 16},
        {66, "SQ_GS0", 0, 252, 16},
        {67, "SQ_GS1", 1, 252, 16},
        {68, "SQ_GS2", 2, 252, 16},
        {69, "SQ_GS3", 3, 252, 16},
        {70, "SQ_VS0", 0, 252, 16},
        {71, "SQ_VS1", 1, 252, 16},
        {72, "SQ_VS2", 2, 252, 16},
        {73, "SQ_VS3", 3, 252, 16},
        {74, "SQ_PS0", 0, 252, 16},
        {75, "SQ_PS1", 1, 252, 16},
        {76, "SQ_PS2", 2, 252, 16},
        {77, "SQ_PS3", 3, 252, 16},
        {78, "SQ_LS0", 0, 252, 16},
        {79, "SQ_LS1", 1, 252, 16},
        {80, "SQ_LS2", 2, 252, 16},
        {81, "SQ_LS3", 3, 252, 16},
        {82, "SQ_HS0", 0, 252, 16},
        {83, "SQ_HS1", 1, 252, 16},
        {84, "SQ_HS2", 2, 252, 16},
        {85, "SQ_HS3", 3, 252, 16},
        {86, "SQ_CS0", 0, 252, 16},
        {87, "SQ_CS1", 1, 252, 16},
        {88, "SQ_CS2", 2, 252, 16},
        {89, "SQ_CS3", 3, 252, 16},
        {90, "TA0", 0, 111, 2},
        {91, "TA1", 1, 111, 2},
        {92, "TA2", 2, 111, 2},
        {93, "TA3", 3, 111, 2},
        {94, "TA4", 4, 111, 2},
        {95, "TA5", 5, 111, 2},
        {96, "TA6", 6, 111, 2},
        {97, "TA7", 7, 111, 2},
        {98, "TA8", 8, 111, 2},
        {99, "TA9", 9, 111, 2},
        {100, "TA10", 10, 111, 2},
        {101, "TA11", 11, 111, 2},
        {102, "TA12", 12, 111, 2},
        {103, "TA13", 13, 111, 2},
        {104, "TA14", 14, 111, 2},
        {105, "TA15", 15, 111, 2},
        {106, "TA16", 16, 111, 2},
        {107, "TA17", 17, 111, 2},
        {108, "TA18", 18, 111, 2},
        {109, "TA19", 19, 111, 2},
        {110, "TA20", 20, 111, 2},
        {111, "TA21", 21, 111, 2},
        {112, "TA22", 22, 111, 2},
        {113, "TA23", 23, 111, 2},
        {114, "TA24", 24, 111, 2},
        {115, "TA25", 25, 111, 2},
        {116, "TA26", 26, 111, 2},
        {117, "TA27", 27, 111, 2},
        {118, "TA28", 28, 111, 2},
        {119, "TA29", 29, 111, 2},
        {120, "TA30", 30, 111, 2},
        {121, "TA31", 31, 111, 2},
        {122, "TA32", 32, 111, 2},
        {123, "TA33", 33, 111, 2},
        {124, "TA34", 34, 111, 2},
        {125, "TA35", 35, 111, 2},
        {126, "TA36", 36, 111, 2},
        {127, "TA37", 37, 111, 2},
        {128, "TA38", 38, 111, 2},
        {129, "TA39", 39, 111, 2},
        {130, "TA40", 40, 111, 2},
        {131, "TA41", 41, 111, 2},
        {132, "TA42", 42, 111, 2},
        {133, "TA43", 43, 111, 2},
        {134, "TD0", 0, 49, 2},
        {135, "TD1", 1, 49, 2},
        {136, "TD2", 2, 49, 2},
        {137, "TD3", 3, 49, 2},
        {138, "TD4", 4, 49, 2},
        {139, "TD5", 5, 49, 2},
        {140, "TD6", 6, 49, 2},
        {141, "TD7", 7, 49, 2},
        {142, "TD8", 8, 49, 2},
        {143, "TD9", 9, 49, 2},
        {144, "TD10", 10, 49, 2},
        {145, "TD11", 11, 49, 2},
        {146, "TD12", 12, 49, 2},
        {147, "TD13", 13, 49, 2},
        {148, "TD14", 14, 49, 2},
        {149, "TD15", 15, 49, 2},
        {150, "TD16", 16, 49, 2},
        {151, "TD17", 17, 49, 2},
        {152, "TD18", 18, 49, 2},
        {153, "TD19", 19, 49, 2},
        {154, "TD20", 20, 49, 2},
        {155, "TD21", 21, 49, 2},
        {156, "TD22", 22, 49, 2},
        {157, "TD23", 23, 49, 2},
        {158, "TD24", 24, 49, 2},
        {159, "TD25", 25, 49, 2},
        {160, "TD26", 26, 49, 2},
        {161, "TD27", 27, 49, 2},
        {162, "TD28", 28, 49, 2},
        {163, "TD29", 29, 49, 2},
        {164, "TD30", 30, 49, 2},
        {165, "TD31", 31, 49, 2},
        {166, "TD32", 32, 49, 2},
        {167, "TD33", 33, 49, 2},
        {168, "TD34", 34, 49, 2},
        {169, "TD35", 35, 49, 2},
        {170, "TD36", 36, 49, 2},
        {171, "TD37", 37, 49, 2},
        {172, "TD38", 38, 49, 2},
        {173, "TD39", 39, 49, 2},
        {174, "TD40", 40, 49, 2},
        {175, "TD41", 41, 49, 2},
        {176, "TD42", 42, 49, 2},
        {177, "TD43", 43, 49, 2},
        {178, "TCP0", 0, 154, 4},
        {179, "TCP1", 1, 154, 4},
        {180, "TCP2", 2, 154, 4},
        {181, "TCP3", 3, 154, 4},
        {182, "TCP4", 4, 154, 4},
        {183, "TCP5", 5, 154, 4},
        {184, "TCP6", 6, 154, 4},
        {185, "TCP7", 7, 154, 4},
        {186, "TCP8", 8, 154, 4},
        {187, "TCP9", 9, 154, 4},
        {188, "TCP10", 10, 154, 4},
        {189, "TCP11", 11, 154, 4},
        {190, "TCP12", 12, 154, 4},
        {191, "TCP13", 13, 154, 4},
        {192, "TCP14", 14, 154, 4},
        {193, "TCP15", 15, 154, 4},
        {194, "TCP16", 16, 154, 4},
        {195, "TCP17", 17, 154, 4},
        {196, "TCP18", 18, 154, 4},
        {197, "TCP19", 19, 154, 4},
        {198, "TCP20", 20, 154, 4},
        {199, "TCP21", 21, 154, 4},
        {200, "TCP22", 22, 154, 4},
        {201, "TCP23", 23, 154, 4},
        {202, "TCP24", 24, 154, 4},
        {203, "TCP25", 25, 154, 4},
        {204, "TCP26", 26, 154, 4},
        {205, "TCP27", 27, 154, 4},
        {206, "TCP28", 28, 154, 4},
        {207, "TCP29", 29, 154, 4},
        {208, "TCP30", 30, 154, 4},
        {209, "TCP31", 31, 154, 4},
        {210, "TCP32", 32, 154, 4},
        {211, "TCP33", 33, 154, 4},
        {212, "TCP34", 34, 154, 4},
        {213, "TCP35", 35, 154, 4},
        {214, "TCP36", 36, 154, 4},
        {215, "TCP37", 37, 154, 4},
        {216, "TCP38", 38, 154, 4},
        {217, "TCP39", 39, 154, 4},
        {218, "TCP40", 40, 154, 4},
        {219, "TCP41", 41, 154, 4},
        {220, "TCP42", 42, 154, 4},
        {221, "TCP43", 43, 154, 4},
        {222, "TCC0", 0, 160, 4},
        {223, "TCC1", 1, 160, 4},
        {224, "TCC2", 2, 160, 4},
        {225, "TCC3", 3, 160, 4},
        {226, "TCC4", 4, 160, 4},
        {227, "TCC5", 5, 160, 4},
        {228, "TCC6", 6, 160, 4},
        {229, "TCC7", 7, 160, 4},
        {230, "TCC8", 8, 160, 4},
        {231, "TCC9", 9, 160, 4},
        {232, "TCC10", 10, 160, 4},
        {233, "TCC11", 11, 160, 4},
        {234, "TCC12", 12, 160, 4},
        {235, "TCC13", 13, 160, 4},
        {236, "TCC14", 14, 160, 4},
        {237, "TCC15", 15, 160, 4},
        {238, "TCA0", 0, 39, 4},
        {239, "TCA1", 1, 39, 4},
        {240, "GDS", 0, 121, 4},
        {241, "IA0", 0, 22, 4},
        {242, "IA1", 1, 22, 4},
        {243, "VGT0", 0, 140, 4},
        {244, "VGT1", 1, 140, 4},
        {245, "VGT2", 2, 140, 4},
        {246, "VGT3", 3, 140, 4},
        {247, "MC0", 0, 22, 4},
        {248, "MC1", 1, 22, 4},
        {249, "MC2", 2, 22, 4},
        {250, "MC3", 3, 22, 4},
        {251, "MC4", 4, 22, 4},
        {252, "MC5", 5, 22, 4},
        {253, "MC6", 6, 22, 4},
        {254, "MC7", 7, 22, 4},
        {255, "MC8", 8, 22, 4},
        {256, "MC9", 9, 22, 4},
        {257, "MC10", 10, 22, 4},
        {258, "MC11", 11, 22, 4},
        {259, "MC12", 12, 22, 4},
        {260, "MC13", 13, 22, 4},
        {261, "MC14", 14, 22, 4},
        {262, "MC15", 15, 22, 4},
        {263, "CPG", 0, 46, 2},
        {264, "CPC", 0, 22, 2},
        {265, "WD", 0, 10, 4},
        {266, "TCS", 0, 128, 4},
        {267, "GPUTimeStamp", 0, 1, 1},
        {268, "GPUTime", 0, 6, 2},
    };

    GpaCounterGroupExposedCounterDesc kHwDx11ExposedCountersByGroupGfx7[] = {
        {4, 156},
        {5, 382},
        {6, 608},
        {7, 834},
        {8, 1060},
        {9, 1286},
        {10, 1512},
        {11, 1738},
        {12, 1964},
        {13, 2190},
        {14, 2416},
        {15, 2642},
        {16, 2868},
        {17, 3094},
        {18, 3320},
        {19, 3546},
        {20, 3772},
        {21, 4029},
        {22, 4286},
        {23, 4543},
        {24, 4800},
        {25, 5057},
        {26, 5314},
        {27, 5571},
        {28, 5828},
        {29, 6085},
        {30, 6342},
        {31, 6599},
        {32, 6856},
        {33, 7113},
        {34, 7370},
        {35, 7627},
        {36, 7884},
        {42, 7985},
        {43, 8138},
        {44, 8291},
        {45, 8444},
        {46, 8597},
        {47, 8992},
        {48, 9387},
        {49, 9782},
        {50, 10177},
        {51, 10209},
        {52, 10241},
        {53, 10273},
        {54, 10305},
        {55, 10491},
        {56, 10677},
        {57, 10863},
        {58, 11049},
        {59, 11301},
        {60, 11553},
        {61, 11805},
        {62, 12057},
        {63, 12309},
        {64, 12561},
        {65, 12813},
        {66, 13065},
        {67, 13317},
        {68, 13569},
        {69, 13821},
        {70, 14073},
        {71, 14325},
        {72, 14577},
        {73, 14829},
        {74, 15081},
        {75, 15333},
        {76, 15585},
        {77, 15837},
        {78, 16089},
        {79, 16341},
        {80, 16593},
        {81, 16845},
        {82, 17097},
        {83, 17349},
        {84, 17601},
        {85, 17853},
        {86, 18105},
        {87, 18357},
        {88, 18609},
        {89, 18861},
        {90, 19113},
        {91, 19224},
        {92, 19335},
        {93, 19446},
        {94, 19557},
        {95, 19668},
        {96, 19779},
        {97, 19890},
        {98, 20001},
        {99, 20112},
        {100, 20223},
        {101, 20334},
        {102, 20445},
        {103, 20556},
        {104, 20667},
        {105, 20778},
        {106, 20889},
        {107, 21000},
        {108, 21111},
        {109, 21222},
        {110, 21333},
        {111, 21444},
        {112, 21555},
        {113, 21666},
        {114, 21777},
        {115, 21888},
        {116, 21999},
        {117, 22110},
        {118, 22221},
        {119, 22332},
        {120, 22443},
        {121, 22554},
        {122, 22665},
        {123, 22776},
        {124, 22887},
        {125, 22998},
        {126, 23109},
        {127, 23220},
        {128, 23331},
        {129, 23442},
        {130, 23553},
        {131, 23664},
        {132, 23775},
        {133, 23886},
        {178, 26153},
        {179, 26307},
        {180, 26461},
        {181, 26615},
        {182, 26769},
        {183, 26923},
        {184, 27077},
        {185, 27231},
        {186, 27385},
        {187, 27539},
        {188, 27693},
        {189, 27847},
        {190, 28001},
        {191, 28155},
        {192, 28309},
        {193, 28463},
        {194, 28617},
        {195, 28771},
        {196, 28925},
        {197, 29079},
        {198, 29233},
        {199, 29387},
        {200, 29541},
        {201, 29695},
        {202, 29849},
        {203, 30003},
        {204, 30157},
        {205, 30311},
        {206, 30465},
        {207, 30619},
        {208, 30773},
        {209, 30927},
        {210, 31081},
        {211, 31235},
        {212, 31389},
        {213, 31543},
        {214, 31697},
        {215, 31851},
        {216, 32005},
        {217, 32159},
        {218, 32313},
        {219, 32467},
        {220, 32621},
        {221, 32775},
        {222, 32929},
        {223, 33089},
        {224, 33249},
        {225, 33409},
        {226, 33569},
        {227, 33729},
        {228, 33889},
        {229, 34049},
        {230, 34209},
        {231, 34369},
        {232, 34529},
        {233, 34689},
        {234, 34849},
        {235, 35009},
        {236, 35169},
        {237, 35329},
        {243, 35732},
        {244, 35872},
        {245, 36012},
        {246, 36152},
        {268, 36851},
    };

    GpaPaddedCounterDesc kDx11PaddedCounterByGroupGfx7[] = {
        {}
    };

    GpaSqCounterGroupDesc kHwDx11SqGroupsGfx7[] = {
        {58, 0, kSqAll},
        {59, 1, kSqAll},
        {60, 2, kSqAll},
        {61, 3, kSqAll},
        {62, 0, kSqEs},
        {63, 1, kSqEs},
        {64, 2, kSqEs},
        {65, 3, kSqEs},
        {66, 0, kSqGs},
        {67, 1, kSqGs},
        {68, 2, kSqGs},
        {69, 3, kSqGs},
        {70, 0, kSqVs},
        {71, 1, kSqVs},
        {72, 2, kSqVs},
        {73, 3, kSqVs},
        {74, 0, kSqPs},
        {75, 1, kSqPs},
        {76, 2, kSqPs},
        {77, 3, kSqPs},
        {78, 0, kSqLs},
        {79, 1, kSqLs},
        {80, 2, kSqLs},
        {81, 3, kSqLs},
        {82, 0, kSqHs},
        {83, 1, kSqHs},
        {84, 2, kSqHs},
        {85, 3, kSqHs},
        {86, 0, kSqCs},
        {87, 1, kSqCs},
        {88, 2, kSqCs},
        {89, 3, kSqCs},
    };

    unsigned int kHwDx11SqIsolatedGroupsGfx7[] = {
        90,   // Ta
        91,   // Ta
        92,   // Ta
        93,   // Ta
        94,   // Ta
        95,   // Ta
        96,   // Ta
        97,   // Ta
        98,   // Ta
        99,   // Ta
        100,  // Ta
        101,  // Ta
        102,  // Ta
        103,  // Ta
        104,  // Ta
        105,  // Ta
        106,  // Ta
        107,  // Ta
        108,  // Ta
        109,  // Ta
        110,  // Ta
        111,  // Ta
        112,  // Ta
        113,  // Ta
        114,  // Ta
        115,  // Ta
        116,  // Ta
        117,  // Ta
        118,  // Ta
        119,  // Ta
        120,  // Ta
        121,  // Ta
        122,  // Ta
        123,  // Ta
        124,  // Ta
        125,  // Ta
        126,  // Ta
        127,  // Ta
        128,  // Ta
        129,  // Ta
        130,  // Ta
        131,  // Ta
        132,  // Ta
        133,  // Ta
        134,  // Td
        135,  // Td
        136,  // Td
        137,  // Td
        138,  // Td
        139,  // Td
        140,  // Td
        141,  // Td
        142,  // Td
        143,  // Td
        144,  // Td
        145,  // Td
        146,  // Td
        147,  // Td
        148,  // Td
        149,  // Td
        150,  // Td
        151,  // Td
        152,  // Td
        153,  // Td
        154,  // Td
        155,  // Td
        156,  // Td
        157,  // Td
        158,  // Td
        159,  // Td
        160,  // Td
        161,  // Td
        162,  // Td
        163,  // Td
        164,  // Td
        165,  // Td
        166,  // Td
        167,  // Td
        168,  // Td
        169,  // Td
        170,  // Td
        171,  // Td
        172,  // Td
        173,  // Td
        174,  // Td
        175,  // Td
        176,  // Td
        177,  // Td
        178,  // Tcp
        179,  // Tcp
        180,  // Tcp
        181,  // Tcp
        182,  // Tcp
        183,  // Tcp
        184,  // Tcp
        185,  // Tcp
        186,  // Tcp
        187,  // Tcp
        188,  // Tcp
        189,  // Tcp
        190,  // Tcp
        191,  // Tcp
        192,  // Tcp
        193,  // Tcp
        194,  // Tcp
        195,  // Tcp
        196,  // Tcp
        197,  // Tcp
        198,  // Tcp
        199,  // Tcp
        200,  // Tcp
        201,  // Tcp
        202,  // Tcp
        203,  // Tcp
        204,  // Tcp
        205,  // Tcp
        206,  // Tcp
        207,  // Tcp
        208,  // Tcp
        209,  // Tcp
        210,  // Tcp
        211,  // Tcp
        212,  // Tcp
        213,  // Tcp
        214,  // Tcp
        215,  // Tcp
        216,  // Tcp
        217,  // Tcp
        218,  // Tcp
        219,  // Tcp
        220,  // Tcp
        221,  // Tcp
        222,  // Tcc
        223,  // Tcc
        224,  // Tcc
        225,  // Tcc
        226,  // Tcc
        227,  // Tcc
        228,  // Tcc
        229,  // Tcc
        230,  // Tcc
        231,  // Tcc
        232,  // Tcc
        233,  // Tcc
        234,  // Tcc
        235,  // Tcc
        236,  // Tcc
        237,  // Tcc
        238,  // Tca
        239,  // Tca
    };

    PE_BLOCK_ID kHwDx11DriverEnumGfx7[] = {
        PE_BLOCK_SDMA,
        PE_BLOCK_SDMA,
        PE_BLOCK_SRBM,
        PE_BLOCK_CPF,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_CB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_DB,
        PE_BLOCK_GRBM,
        PE_BLOCK_GRBMSE,
        PE_BLOCK_GRBMSE,
        PE_BLOCK_GRBMSE,
        PE_BLOCK_GRBMSE,
        PE_BLOCK_RLC,
        PE_BLOCK_PA,
        PE_BLOCK_PA,
        PE_BLOCK_PA,
        PE_BLOCK_PA,
        PE_BLOCK_SC,
        PE_BLOCK_SC,
        PE_BLOCK_SC,
        PE_BLOCK_SC,
        PE_BLOCK_SX,
        PE_BLOCK_SX,
        PE_BLOCK_SX,
        PE_BLOCK_SX,
        PE_BLOCK_SPI,
        PE_BLOCK_SPI,
        PE_BLOCK_SPI,
        PE_BLOCK_SPI,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_SQ,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TA,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TD,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCP,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCC,
        PE_BLOCK_TCA,
        PE_BLOCK_TCA,
        PE_BLOCK_GDS,
        PE_BLOCK_IA,
        PE_BLOCK_IA,
        PE_BLOCK_VGT,
        PE_BLOCK_VGT,
        PE_BLOCK_VGT,
        PE_BLOCK_VGT,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_MC,
        PE_BLOCK_CPG,
        PE_BLOCK_CPC,
        PE_BLOCK_WD,
        PE_BLOCK_TCS,
        PE_BLOCK_UNKNOWN,
        PE_BLOCK_UNKNOWN,
    };

    const unsigned int           kHwDx11GpuTimeBottomToBottomDurationIndexGfx7 = 36851;                                              ///< Index of delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets. for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GpuTimeBottomToBottomStartIndexGfx7    = static_cast<unsigned int>(-1);                      ///< Index of time of the previous command reaching bottom of pipe for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GpuTimeBottomToBottomEndIndexGfx7      = static_cast<unsigned int>(-1);                      ///< Index of time of the current command reaching bottom of pipe for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GpuTimeTopToBottomDurationIndexGfx7    = 36854;                                              ///< Index of execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GpuTimeTopToBottomStartIndexGfx7       = static_cast<unsigned int>(-1);                      ///< Index of time that the current command reaches the top of pipe for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GpuTimeTopToBottomEndIndexGfx7         = static_cast<unsigned int>(-1);                      ///< Index of time that the current command reaches the bottom of pipe for Dx11 for Gfx7 family
    const std::set<unsigned int> kHwDx11TimestampBlockIdsGfx7                  = {268, 267};                                         ///< Timestamp block id's for Dx11 for Gfx7 family
    const std::set<unsigned int> kHwDx11TimeCounterIndicesGfx7                 = {36851, 36852, 36853, 36854, 36855, 36856, 36850};  ///< Timestamp counter indices for Dx11 for Gfx7 family
    const unsigned int           kHwDx11GroupCountGfx7                         = static_cast<unsigned int>(kHwDx11GroupsGfx7.size());
    const unsigned int           kDx11PaddedCounterGroupCountGfx7              = 0;
    const unsigned int           kHwDx11SqGroupCountGfx7                       = sizeof(kHwDx11SqGroupsGfx7) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwDx11SqIsolatedGroupCountGfx7               = sizeof(kHwDx11SqIsolatedGroupsGfx7) / sizeof(unsigned int);
}  // namespace counter_dx11_gfx7

// clang-format on
