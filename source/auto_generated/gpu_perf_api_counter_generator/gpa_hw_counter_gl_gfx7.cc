//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief GL counter definitions for GFX7.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx7.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gl_gfx7.h"

// This file is NOT autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_gl_gfx7
{
    using namespace counter_gfx7;

    std::vector<std::vector<GpaHardwareCounterDesc>*> kGlCounterGroupArrayGfx7 = {
        &CB0countersGfx7,
        &CB1countersGfx7,
        &CB2countersGfx7,
        &CB3countersGfx7,
        &DB0countersGfx7,
        &DB1countersGfx7,
        &DB2countersGfx7,
        &DB3countersGfx7,
        &GRBMcountersGfx7,
        &PA_SU0countersGfx7,
        &PA_SC0countersGfx7,
        &SPI0countersGfx7,
        &SQ0countersGfx7,
        &SQ_ES0countersGfx7,
        &SQ_GS0countersGfx7,
        &SQ_VS0countersGfx7,
        &SQ_PS0countersGfx7,
        &SQ_LS0countersGfx7,
        &SQ_HS0countersGfx7,
        &SQ_CS0countersGfx7,
        &SX0countersGfx7,
        &TA0countersGfx7,
        &TA1countersGfx7,
        &TA2countersGfx7,
        &TA3countersGfx7,
        &TA4countersGfx7,
        &TA5countersGfx7,
        &TA6countersGfx7,
        &TA7countersGfx7,
        &TA8countersGfx7,
        &TA9countersGfx7,
        &TA10countersGfx7,
        &TCC0countersGfx7,
        &TCC1countersGfx7,
        &TCC2countersGfx7,
        &TCC3countersGfx7,
        &TCC4countersGfx7,
        &TCC5countersGfx7,
        &TCC6countersGfx7,
        &TCC7countersGfx7,
        &TCC8countersGfx7,
        &TCC9countersGfx7,
        &TCC10countersGfx7,
        &TCC11countersGfx7,
        &TCC12countersGfx7,
        &TCC13countersGfx7,
        &TCC14countersGfx7,
        &TCC15countersGfx7,
        &TCP0countersGfx7,
        &TCP1countersGfx7,
        &TCP2countersGfx7,
        &TCP3countersGfx7,
        &TCP4countersGfx7,
        &TCP5countersGfx7,
        &TCP6countersGfx7,
        &TCP7countersGfx7,
        &TCP8countersGfx7,
        &TCP9countersGfx7,
        &TCP10countersGfx7,
        &VGT0countersGfx7,
        &GPUTimecountersGfx7,
    };

    std::vector<GpaCounterGroupDesc> kHwGlGroupsGfx7 = {
        {0, "CB0", 0, 226, 4},
        {1, "CB1", 1, 226, 4},
        {2, "CB2", 2, 226, 4},
        {3, "CB3", 3, 226, 4},
        {4, "CPF", 0, 17, 2},
        {5, "DB0", 0, 257, 4},
        {6, "DB1", 1, 257, 4},
        {7, "DB2", 2, 257, 4},
        {8, "DB3", 3, 257, 4},
        {9, "GRBM", 0, 34, 2},
        {10, "GRBMSE", 0, 15, 4},
        {11, "PA_SU", 0, 153, 4},
        {12, "PA_SC", 0, 395, 8},
        {13, "SPI", 0, 186, 6},
        {14, "SQ", 0, 252, 16},
        {15, "SQ_ES", 0, 252, 16},
        {16, "SQ_GS", 0, 252, 16},
        {17, "SQ_VS", 0, 252, 16},
        {18, "SQ_PS", 0, 252, 16},
        {19, "SQ_LS", 0, 252, 16},
        {20, "SQ_HS", 0, 252, 16},
        {21, "SQ_CS", 0, 252, 16},
        {22, "SX", 0, 32, 4},
        {23, "TA0", 0, 111, 2},
        {24, "TA1", 1, 111, 2},
        {25, "TA2", 2, 111, 2},
        {26, "TA3", 3, 111, 2},
        {27, "TA4", 4, 111, 2},
        {28, "TA5", 5, 111, 2},
        {29, "TA6", 6, 111, 2},
        {30, "TA7", 7, 111, 2},
        {31, "TA8", 8, 111, 2},
        {32, "TA9", 9, 111, 2},
        {33, "TA10", 10, 111, 2},
        {34, "TCA0", 0, 39, 4},
        {35, "TCA1", 1, 39, 4},
        {36, "TCC0", 0, 160, 4},
        {37, "TCC1", 1, 160, 4},
        {38, "TCC2", 2, 160, 4},
        {39, "TCC3", 3, 160, 4},
        {40, "TCC4", 4, 160, 4},
        {41, "TCC5", 5, 160, 4},
        {42, "TCC6", 6, 160, 4},
        {43, "TCC7", 7, 160, 4},
        {44, "TCC8", 8, 160, 4},
        {45, "TCC9", 9, 160, 4},
        {46, "TCC10", 10, 160, 4},
        {47, "TCC11", 11, 160, 4},
        {48, "TCC12", 12, 160, 4},
        {49, "TCC13", 13, 160, 4},
        {50, "TCC14", 14, 160, 4},
        {51, "TCC15", 15, 160, 4},
        {52, "TD0", 0, 49, 2},
        {53, "TD1", 1, 49, 2},
        {54, "TD2", 2, 49, 2},
        {55, "TD3", 3, 49, 2},
        {56, "TD4", 4, 49, 2},
        {57, "TD5", 5, 49, 2},
        {58, "TD6", 6, 49, 2},
        {59, "TD7", 7, 49, 2},
        {60, "TD8", 8, 49, 2},
        {61, "TD9", 9, 49, 2},
        {62, "TD10", 10, 49, 2},
        {63, "TCP0", 0, 154, 4},
        {64, "TCP1", 1, 154, 4},
        {65, "TCP2", 2, 154, 4},
        {66, "TCP3", 3, 154, 4},
        {67, "TCP4", 4, 154, 4},
        {68, "TCP5", 5, 154, 4},
        {69, "TCP6", 6, 154, 4},
        {70, "TCP7", 7, 154, 4},
        {71, "TCP8", 8, 154, 4},
        {72, "TCP9", 9, 154, 4},
        {73, "TCP10", 10, 154, 4},
        {74, "GDS", 0, 121, 4},
        {75, "VGT", 0, 140, 4},
        {76, "IA", 0, 22, 4},
        {77, "MC", 0, 22, 4},
        {78, "SRBM", 0, 19, 2},
        {79, "WD", 0, 10, 4},
        {80, "CPG", 0, 46, 2},
        {81, "CPC", 0, 22, 2},
        {82, "GPIN", 0, 5, 5},
        {83, "GPUTime", 0, 6, 2},
    };

    GpaCounterGroupExposedCounterDesc kHwGlExposedCountersByGroupGfx7[] = {
        {0, 0},
        {1, 226},
        {2, 452},
        {3, 678},
        {5, 921},
        {6, 1178},
        {7, 1435},
        {8, 1692},
        {9, 1949},
        {11, 1998},
        {12, 2151},
        {13, 2546},
        {14, 2732},
        {15, 2984},
        {16, 3236},
        {17, 3488},
        {18, 3740},
        {19, 3992},
        {20, 4244},
        {21, 4496},
        {22, 4748},
        {23, 4780},
        {24, 4891},
        {25, 5002},
        {26, 5113},
        {27, 5224},
        {28, 5335},
        {29, 5446},
        {30, 5557},
        {31, 5668},
        {32, 5779},
        {33, 5890},
        {36, 6079},
        {37, 6239},
        {38, 6399},
        {39, 6559},
        {40, 6719},
        {41, 6879},
        {42, 7039},
        {43, 7199},
        {44, 7359},
        {45, 7519},
        {46, 7679},
        {47, 7839},
        {48, 7999},
        {49, 8159},
        {50, 8319},
        {51, 8479},
        {63, 9178},
        {64, 9332},
        {65, 9486},
        {66, 9640},
        {67, 9794},
        {68, 9948},
        {69, 10102},
        {70, 10256},
        {71, 10410},
        {72, 10564},
        {73, 10718},
        {75, 10993},
        {83, 11279},
    };

    GpaPaddedCounterDesc kGlPaddedCounterByGroupGfx7[] = {
        {}
    };

    GpaSqCounterGroupDesc kHwGlSqGroupsGfx7[] = {
        {14, 0, kSqAll},
        {15, 0, kSqEs},
        {16, 0, kSqGs},
        {17, 0, kSqVs},
        {18, 0, kSqPs},
        {19, 0, kSqLs},
        {20, 0, kSqHs},
        {21, 0, kSqCs},
    };

    unsigned int kHwGlSqIsolatedGroupsGfx7[] = {
        23,  // Ta
        24,  // Ta
        25,  // Ta
        26,  // Ta
        27,  // Ta
        28,  // Ta
        29,  // Ta
        30,  // Ta
        31,  // Ta
        32,  // Ta
        33,  // Ta
        34,  // Tca
        35,  // Tca
        36,  // Tcc
        37,  // Tcc
        38,  // Tcc
        39,  // Tcc
        40,  // Tcc
        41,  // Tcc
        42,  // Tcc
        43,  // Tcc
        44,  // Tcc
        45,  // Tcc
        46,  // Tcc
        47,  // Tcc
        48,  // Tcc
        49,  // Tcc
        50,  // Tcc
        51,  // Tcc
        52,  // Td
        53,  // Td
        54,  // Td
        55,  // Td
        56,  // Td
        57,  // Td
        58,  // Td
        59,  // Td
        60,  // Td
        61,  // Td
        62,  // Td
        63,  // Tcp
        64,  // Tcp
        65,  // Tcp
        66,  // Tcp
        67,  // Tcp
        68,  // Tcp
        69,  // Tcp
        70,  // Tcp
        71,  // Tcp
        72,  // Tcp
        73,  // Tcp
    };

    const unsigned int           kHwGlGpuTimeBottomToBottomDurationIndexGfx7 = 11279;                                       ///< Index of delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets. for Gl for Gfx7 family
    const unsigned int           kHwGlGpuTimeBottomToBottomStartIndexGfx7    = static_cast<unsigned int>(-1);               ///< Index of time of the previous command reaching bottom of pipe for Gl for Gfx7 family
    const unsigned int           kHwGlGpuTimeBottomToBottomEndIndexGfx7      = static_cast<unsigned int>(-1);               ///< Index of time of the current command reaching bottom of pipe for Gl for Gfx7 family
    const unsigned int           kHwGlGpuTimeTopToBottomDurationIndexGfx7    = 11282;                                       ///< Index of execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue for Gl for Gfx7 family
    const unsigned int           kHwGlGpuTimeTopToBottomStartIndexGfx7       = static_cast<unsigned int>(-1);               ///< Index of time that the current command reaches the top of pipe for Gl for Gfx7 family
    const unsigned int           kHwGlGpuTimeTopToBottomEndIndexGfx7         = static_cast<unsigned int>(-1);               ///< Index of time that the current command reaches the bottom of pipe for Gl for Gfx7 family
    const std::set<unsigned int> kHwGlTimestampBlockIdsGfx7                  = {83};                                        ///< Timestamp block id's for Gl for Gfx7 family
    const std::set<unsigned int> kHwGlTimeCounterIndicesGfx7                 = {11279, 11280, 11281, 11282, 11283, 11284};  ///< Timestamp counter indices for Gl for Gfx7 family
    const unsigned int           kHwGlGroupCountGfx7                         = static_cast<unsigned int>(kHwGlGroupsGfx7.size());
    const unsigned int           kGlPaddedCounterGroupCountGfx7              = 0;
    const unsigned int           kHwGlSqGroupCountGfx7                       = sizeof(kHwGlSqGroupsGfx7) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwGlSqIsolatedGroupCountGfx7               = sizeof(kHwGlSqIsolatedGroupsGfx7) / sizeof(unsigned int);
}  // namespace counter_gl_gfx7

// clang-format on
