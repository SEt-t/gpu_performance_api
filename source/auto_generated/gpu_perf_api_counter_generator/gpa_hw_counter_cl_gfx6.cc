//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief CL counter definitions for GFX6.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx6.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_cl_gfx6.h"

// This file is NOT autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_cl_gfx6
{
    using namespace counter_gfx6;

    std::vector<std::vector<GpaHardwareCounterDesc>*> kClCounterGroupArrayGfx6 = {
        &CB0countersGfx6,
        &CB1countersGfx6,
        &DB0countersGfx6,
        &DB1countersGfx6,
        &GRBMcountersGfx6,
        &PA_SU0countersGfx6,
        &PA_SC0countersGfx6,
        &SPI0countersGfx6,
        &SQ0countersGfx6,
        &SQ_EScountersGfx6,
        &SQ_GScountersGfx6,
        &SQ_VScountersGfx6,
        &SQ_PScountersGfx6,
        &SQ_LScountersGfx6,
        &SQ_HScountersGfx6,
        &SQ_CScountersGfx6,
        &SX0countersGfx6,
        &TA0countersGfx6,
        &TA1countersGfx6,
        &TA2countersGfx6,
        &TA3countersGfx6,
        &TA4countersGfx6,
        &TA5countersGfx6,
        &TA6countersGfx6,
        &TA7countersGfx6,
        &TCC0countersGfx6,
        &TCC1countersGfx6,
        &TCC2countersGfx6,
        &TCC3countersGfx6,
        &TCC4countersGfx6,
        &TCC5countersGfx6,
        &TCC6countersGfx6,
        &TCC7countersGfx6,
        &TCC8countersGfx6,
        &TCC9countersGfx6,
        &TCC10countersGfx6,
        &TCC11countersGfx6,
        &TCP0countersGfx6,
        &TCP1countersGfx6,
        &TCP2countersGfx6,
        &TCP3countersGfx6,
        &TCP4countersGfx6,
        &TCP5countersGfx6,
        &TCP6countersGfx6,
        &TCP7countersGfx6,
        &VGT0countersGfx6,
    };

    std::vector<GpaCounterGroupDesc> kHwClGroupsGfx6 = {
        {0, "CB0", 0, 215, 4},
        {1, "CB1", 1, 215, 4},
        {2, "CP", 0, 46, 1},
        {3, "DB0", 0, 249, 4},
        {4, "DB1", 1, 249, 4},
        {5, "GRBM", 0, 29, 2},
        {6, "GRBMSE", 0, 15, 1},
        {7, "PA_SU", 0, 136, 4},
        {8, "PA_SC", 0, 292, 8},
        {9, "SPI", 0, 189, 4},
        {10, "SQ", 0, 399, 16},
        {11, "SQ_ES", 0, 399, 16},
        {12, "SQ_GS", 0, 399, 16},
        {13, "SQ_VS", 0, 399, 16},
        {14, "SQ_PS", 0, 399, 16},
        {15, "SQ_LS", 0, 399, 16},
        {16, "SQ_HS", 0, 399, 16},
        {17, "SQ_CS", 0, 399, 16},
        {18, "SX", 0, 32, 4},
        {19, "TA0", 0, 106, 2},
        {20, "TA1", 1, 106, 2},
        {21, "TA2", 2, 106, 2},
        {22, "TA3", 3, 106, 2},
        {23, "TA4", 4, 106, 2},
        {24, "TA5", 5, 106, 2},
        {25, "TA6", 6, 106, 2},
        {26, "TA7", 7, 106, 2},
        {27, "TCA0", 0, 35, 4},
        {28, "TCA1", 1, 35, 4},
        {29, "TCC0", 0, 128, 4},
        {30, "TCC1", 1, 128, 4},
        {31, "TCC2", 2, 128, 4},
        {32, "TCC3", 3, 128, 4},
        {33, "TCC4", 4, 128, 4},
        {34, "TCC5", 5, 128, 4},
        {35, "TCC6", 6, 128, 4},
        {36, "TCC7", 7, 128, 4},
        {37, "TCC8", 8, 128, 4},
        {38, "TCC9", 9, 128, 4},
        {39, "TCC10", 10, 128, 4},
        {40, "TCC11", 11, 128, 4},
        {41, "TD0", 0, 49, 1},
        {42, "TD1", 1, 49, 1},
        {43, "TD2", 2, 49, 1},
        {44, "TD3", 3, 49, 1},
        {45, "TD4", 4, 49, 1},
        {46, "TD5", 5, 49, 1},
        {47, "TD6", 6, 49, 1},
        {48, "TD7", 7, 49, 1},
        {49, "TCP0", 0, 110, 4},
        {50, "TCP1", 1, 110, 4},
        {51, "TCP2", 2, 110, 4},
        {52, "TCP3", 3, 110, 4},
        {53, "TCP4", 4, 110, 4},
        {54, "TCP5", 5, 110, 4},
        {55, "TCP6", 6, 110, 4},
        {56, "TCP7", 7, 110, 4},
        {57, "GDS", 0, 65, 4},
        {58, "VGT", 0, 140, 4},
        {59, "IA", 0, 22, 4},
        {60, "MC", 0, 22, 4},
        {61, "SRBM", 0, 18, 2},
        {62, "VM", 0, 20, 2},
        {63, "VM_MD", 0, 6, 1},
        {64, "GPIN", 0, 5, 5},
    };

    GpaCounterGroupExposedCounterDesc kHwClExposedCountersByGroupGfx6[] = {
        {0, 0},
        {1, 215},
        {3, 476},
        {4, 725},
        {5, 974},
        {7, 1018},
        {8, 1154},
        {9, 1446},
        {10, 1635},
        {11, 2034},
        {12, 2433},
        {13, 2832},
        {14, 3231},
        {15, 3630},
        {16, 4029},
        {17, 4428},
        {18, 4827},
        {19, 4859},
        {20, 4965},
        {21, 5071},
        {22, 5177},
        {23, 5283},
        {24, 5389},
        {25, 5495},
        {26, 5601},
        {29, 5777},
        {30, 5905},
        {31, 6033},
        {32, 6161},
        {33, 6289},
        {34, 6417},
        {35, 6545},
        {36, 6673},
        {37, 6801},
        {38, 6929},
        {39, 7057},
        {40, 7185},
        {49, 7705},
        {50, 7815},
        {51, 7925},
        {52, 8035},
        {53, 8145},
        {54, 8255},
        {55, 8365},
        {56, 8475},
        {58, 8650},
    };

    GpaPaddedCounterDesc kClPaddedCounterByGroupGfx6[] = {
        {}
    };

    GpaSqCounterGroupDesc kHwClSqGroupsGfx6[] = {
        {10, 0, kSqAll},
        {11, 0, kSqEs},
        {12, 0, kSqGs},
        {13, 0, kSqVs},
        {14, 0, kSqPs},
        {15, 0, kSqLs},
        {16, 0, kSqHs},
        {17, 0, kSqCs},
    };

    unsigned int kHwClSqIsolatedGroupsGfx6[] = {
        19,  // Ta
        20,  // Ta
        21,  // Ta
        22,  // Ta
        23,  // Ta
        24,  // Ta
        25,  // Ta
        26,  // Ta
        27,  // Tca
        28,  // Tca
        29,  // Tcc
        30,  // Tcc
        31,  // Tcc
        32,  // Tcc
        33,  // Tcc
        34,  // Tcc
        35,  // Tcc
        36,  // Tcc
        37,  // Tcc
        38,  // Tcc
        39,  // Tcc
        40,  // Tcc
        41,  // Td
        42,  // Td
        43,  // Td
        44,  // Td
        45,  // Td
        46,  // Td
        47,  // Td
        48,  // Td
        49,  // Tcp
        50,  // Tcp
        51,  // Tcp
        52,  // Tcp
        53,  // Tcp
        54,  // Tcp
        55,  // Tcp
        56,  // Tcp
    };

    const std::set<unsigned int> kHwClTimestampBlockIdsGfx6     = {};  ///< Timestamp block id's for Cl for Gfx6 family
    const std::set<unsigned int> kHwClTimeCounterIndicesGfx6    = {};  ///< Timestamp counter indices for Cl for Gfx6 family
    const unsigned int           kHwClGroupCountGfx6            = static_cast<unsigned int>(kHwClGroupsGfx6.size());
    const unsigned int           kClPaddedCounterGroupCountGfx6 = 0;
    const unsigned int           kHwClSqGroupCountGfx6          = sizeof(kHwClSqGroupsGfx6) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwClSqIsolatedGroupCountGfx6  = sizeof(kHwClSqIsolatedGroupsGfx6) / sizeof(unsigned int);
}  // namespace counter_cl_gfx6

// clang-format on
